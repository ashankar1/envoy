admin:
  address:
    socket_address:
      protocol: TCP
      address: 127.0.0.1
      port_value: 9901
static_resources:
  listeners:
  - name: localhost-listener
    address:
      socket_address:
        protocol: TCP
        address: 127.0.0.1
        port_value: 7777
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: ingress_http
          access_log:
          - name: envoy.access_loggers.stdout
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains: ["*"]
              routes:
              - match:
                  prefix: "/"
                route:
                  cluster: admin_cluster
          http_filters:
          - name: rbac-deny-if-custom-team-is-swg
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.rbac.v3.RBAC
              rules:
                action: DENY
                policies:
                  "policy-rbac-deny-if-custom-team-is-swg":
                    # deny if custom[team].equals("swg")
                    condition:
                      call_expr:
                        function: contains
                        args:
                        - select_expr:
                            operand:
                              ident_expr:
                                name: custom
                            field: team
                        - const_expr:
                            string_value: swg
                    permissions:
                    - any: true
                    principals:
                    - any: true
                  "policy-rbac-deny-if-lazy-func-returns-99":
                    # deny if LazyConstFuncReturns99() == 99
                    condition:
                      call_expr:
                        function: _==_
                        args:
                        - call_expr:
                            function: LazyConstFuncReturns99
                        - const_expr:
                            int64_value: 99
                    permissions:
                    - any: true
                    principals:
                    - any: true
              custom_vocab_config:
                config:
                  name: envoy.expr.custom_vocabulary.swg
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.common.expr.custom_vocabulary.swg.v3.SwgCustomVocabularyInterfaceConfig
                    replace_default_vocab: true
#          - name: rbac-deny-if-ip-is-localhost
#            typed_config:
#              "@type": type.googleapis.com/envoy.extensions.filters.http.rbac.v3.RBAC
#              rules:
#                action: DENY
#                policies:
#                  "policy-rbac-deny-if-ip-is-localhost":
#                    # deny if custom[ip].equals("127.0.0.1")
#                    condition:
#                      call_expr:
#                        function: _==_
#                        args:
#                        - select_expr:
#                            operand:
#                              ident_expr:
#                                name: custom
#                            field: ip
#                        - const_expr:
#                            string_value: 127.0.0.1
#                    permissions:
#                    - any: true
#                    principals:
#                    - any: true
#              custom_vocab_config:
#                config:
#                  name: envoy.expr.custom_vocabulary.swg
#                  typed_config:
#                    "@type": type.googleapis.com/envoy.extensions.filters.common.expr.custom_vocabulary.swg.v3.SwgCustomVocabularyInterfaceConfig
#                    replace_default_vocab: true
#          - name: rbac-deny-if-lazy-func-returns-99
#            typed_config:
#              "@type": type.googleapis.com/envoy.extensions.filters.http.rbac.v3.RBAC
#              rules:
#                action: DENY
#                policies:
#                  "policy-rbac-deny-if-lazy-func-returns-99":
#                    # deny if LazyConstFuncReturns99() == 99
#                    condition:
#                      call_expr:
#                        function: _==_
#                        args:
#                        - call_expr:
#                            function: LazyConstFuncReturns99
#                        - const_expr:
#                            int64_value: 99
#                    permissions:
#                    - any: true
#                    principals:
#                    - any: true
#              custom_vocab_config:
#                config:
#                  name: envoy.expr.custom_vocabulary.swg
#                  typed_config:
#                    "@type": type.googleapis.com/envoy.extensions.filters.common.expr.custom_vocabulary.swg.v3.SwgCustomVocabularyInterfaceConfig
#                    replace_default_vocab: true
#          - name: rbac-deny-if-eager-func-returns-99
#            typed_config:
#              "@type": type.googleapis.com/envoy.extensions.filters.http.rbac.v3.RBAC
#              rules:
#                action: DENY
#                policies:
#                  "policy-deny-if-eager-func-returns-99":
#                    # deny if EagerConstFuncReturns99(1) == 99
#                    condition:
#                      call_expr:
#                        function: _==_
#                        args:
#                        - call_expr:
#                            function: EagerConstFuncReturns99
#                            args:
#                            - const_expr:
#                                int64_value: 1
#                        - const_expr:
#                            int64_value: 99
#                    permissions:
#                    - any: true
#                    principals:
#                    - any: true
#              custom_vocab_config:
#                config:
#                  name: envoy.expr.custom_vocabulary.swg
#                  typed_config:
#                    "@type": type.googleapis.com/envoy.extensions.filters.common.expr.custom_vocabulary.swg.v3.SwgCustomVocabularyInterfaceConfig
#                    replace_default_vocab: true
#          - name: rbac-deny-if-peach-is-empty-3
#            typed_config:
#              "@type": type.googleapis.com/envoy.extensions.filters.http.rbac.v3.RBAC
#              rules:
#                action: DENY
#                policies:
#                  "policy-rbac-deny-if-peach-is-empty-3":
#                    # deny if has(request[peach]) == true
#                    condition:
#                      call_expr:
#                        function: _==_
#                        args:
#                        - ident_expr:
#                            name: team
#                        - const_expr:
#                            string_value: swg
#                    permissions:
#                    - any: true
#                    principals:
#                    - any: true
##          - name: rbac-deny-if-peach-is-empty-4
#            typed_config:
#              "@type": type.googleapis.com/envoy.extensions.filters.http.rbac.v3.RBAC
#              rules:
#                action: ALLOW
#                policies:
#                  "policy-rbac-deny-if-peach-is-empty-4":
#                    # deny if has(request[peach]) == true
#                    condition:
#                      select_expr:
#                        operand:
#                          select_expr:
#                            operand:
#                              ident_expr:
#                                name: request
#                            field: headers
#                        field: peach
#                        test_only: true
#                    permissions:
#                    - any: true
#                    principals:
#                    - any: true
          - name: envoy.filters.http.router
  clusters:
  - name: admin_cluster
    type: strict_dns
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: admin_cluster
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: 127.0.0.1
                port_value: 9901

