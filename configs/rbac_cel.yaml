# RBAC based on CEL expressions

admin:
  address:
    socket_address:
      protocol: TCP
      address: 127.0.0.1
      port_value: 9901
static_resources:
  listeners:
  - name: localhost-listener
    address:
      socket_address:
        protocol: TCP
        address: 127.0.0.1
        port_value: 7777
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: ingress_http
          access_log:
          - name: envoy.access_loggers.stdout
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains: ["*"]
              routes:
              - match:
                  prefix: "/"
                route:
                  cluster: admin_cluster
              request_headers_to_add:
                - header:
                    key: server
                    value: envoy
                  append: true
          http_filters:
          - name: rbac-filter
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.rbac.v3.RBAC
              rules:
                action: DENY
                policies:
#                  "deny-admin-clusters-endpoint-policy":
#                    # deny if request.path.endsWith("/clusters")
#                    condition:
#                      call_expr:
#                        function: endsWith
#                        args:
#                        - select_expr:
#                           operand:
#                             ident_expr:
#                               name: request
#                           field: path
#                        - const_expr:
#                           string_value: /clusters
#                    permissions:
#                    - any: true
#                    principals:
#                    - any: true
#                  "policy-deny-if-header-host-is-localhost":
#                    # deny if request.headers[host] == "localhost"
#                    condition:
#                      call_expr:
#                        function: contains
#                        args:
#                        - select_expr:
#                            operand:
#                              select_expr:
#                                operand:
#                                  ident_expr:
#                                    name: request
#                                field: headers
#                            field: host
#                        - const_expr:
#                            string_value: localhost
#                    permissions:
#                    - any: true
#                    principals:
#                    - any: true
#                  "policy-deny-if-header-server-name-is-envoy":
#                    # deny if request.headers[server] == "envoy"
#                    condition:
#                      call_expr:
#                        function: contains
#                        args:
#                        - select_expr:
#                            operand:
#                              select_expr:
#                                operand:
#                                  ident_expr:
#                                    name: request
#                                field: headers
#                            field: server
#                        - const_expr:
#                            string_value: envoy
#                    permissions:
#                    - any: true
#                    principals:
#                    - any: true
#                  "policy-deny-if-header-user-agent-is-chrome":
#                    # deny if request.headers[user-agent].contains("Chrome")
#                    condition:
#                      call_expr:
#                        function: contains
#                        args:
#                        - select_expr:
#                            operand:
#                              select_expr:
#                                operand:
#                                  ident_expr:
#                                    name: request
#                                field: headers
#                            field: user-agent
#                        - const_expr:
#                            string_value: Chrome
#                    permissions:
#                    - any: true
#                    principals:
#                    - any: true
                  "policy-deny-if-header-user-agent-is-curl":
                    # deny if request.headers[user-agent] == "curl"
                    condition:
                      call_expr:
                        function: contains
                        args:
                        - select_expr:
                            operand:
                              ident_expr:
                                name: request
                            field: useragent
                        - const_expr:
                            string_value: curl
                    permissions:
                    - any: true
                    principals:
                    - any: true
          - name: envoy.filters.http.router
  clusters:
  - name: admin_cluster
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: admin_cluster
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: 127.0.0.1
                port_value: 9901
